// Script para verificar not√≠cias no banco de dados
const { createClient } = require('@supabase/supabase-js')

async function checkNoticias() {
  console.log('üîç Verificando not√≠cias no banco de dados...')
  
  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {
    console.error('‚ùå Vari√°veis do Supabase n√£o configuradas')
    return
  }
  
  try {
    const supabase = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    )
    
    // Buscar todas as not√≠cias
    console.log('\nüì∞ Buscando todas as not√≠cias...')
    const { data: todas, error: todasError } = await supabase
      .from('noticias')
      .select('*')
      .order('created_at', { ascending: false })
    
    if (todasError) {
      console.error('‚ùå Erro ao buscar not√≠cias:', todasError)
      return
    }
    
    console.log(`‚úÖ Total de not√≠cias encontradas: ${todas?.length || 0}`)
    
    if (todas && todas.length > 0) {
      // Contar por status
      const porStatus = todas.reduce((acc, n) => {
        acc[n.status] = (acc[n.status] || 0) + 1
        return acc
      }, {})
      
      console.log('\nüìä Distribui√ß√£o por status:')
      Object.entries(porStatus).forEach(([status, count]) => {
        console.log(`  ${status}: ${count} not√≠cias`)
      })
      
      // Mostrar detalhes das √∫ltimas 5 not√≠cias
      console.log('\nüìã √öltimas 5 not√≠cias:')
      todas.slice(0, 5).forEach((noticia, idx) => {
        console.log(`\n${idx + 1}. ${noticia.titulo}`)
        console.log(`   ID: ${noticia.id}`)
        console.log(`   Status: ${noticia.status}`)
        console.log(`   Categoria: ${noticia.categoria}`)
        console.log(`   Autor: ${noticia.autor}`)
        console.log(`   Criada em: ${noticia.created_at}`)
        console.log(`   Visualiza√ß√µes: ${noticia.visualizacoes || 0}`)
      })
      
      // Verificar not√≠cias publicadas
      const publicadas = todas.filter(n => n.status === 'publicado')
      console.log(`\n‚úÖ Not√≠cias publicadas: ${publicadas.length}`)
      
      if (publicadas.length === 0) {
        console.log('‚ö†Ô∏è  Nenhuma not√≠cia est√° publicada!')
        console.log('üí° Para publicar uma not√≠cia, altere o status para "publicado"')
      }
      
    } else {
      console.log('‚ö†Ô∏è  Nenhuma not√≠cia encontrada no banco de dados')
    }
    
  } catch (error) {
    console.error('‚ùå Erro na verifica√ß√£o:', error)
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  checkNoticias()
}

module.exports = { checkNoticias } 